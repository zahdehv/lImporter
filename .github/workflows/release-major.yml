name: Release Major Version

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Get current version and bump major
        id: version
        run: |
          CURRENT_VERSION=$(node -p "require('./manifest.json').version")
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          NEW_MAJOR=$((MAJOR + 1))
          NEW_VERSION="$NEW_MAJOR.0.0"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update version in manifest.json
        run: |
          NEW_VERSION="${{ steps.version.outputs.new_version }}"
          jq ".version = \"$NEW_VERSION\"" manifest.json > manifest.json.tmp
          mv manifest.json.tmp manifest.json

      - name: Update version in versions.json
        run: |
          NEW_VERSION="${{ steps.version.outputs.new_version }}"
          MIN_APP_VERSION=$(node -p "require('./manifest.json').minAppVersion")
          jq ".[\"$NEW_VERSION\"] = \"$MIN_APP_VERSION\"" versions.json > versions.json.tmp
          mv versions.json.tmp versions.json

      - name: Build plugin
        run: |
          npm install
          npm run build

      - name: Create zip file
        run: |
          mkdir -p dist
          zip -j dist/lImporter.zip main.js manifest.json styles.css

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add manifest.json versions.json
          git commit -m "Bump version to ${{ steps.version.outputs.new_version }}"
          git push

      - name: Create tag
        run: |
          git tag ${{ steps.version.outputs.new_version }}
          git push origin ${{ steps.version.outputs.new_version }}

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ steps.version.outputs.new_version }}" \
            --title="${{ steps.version.outputs.new_version }}" \
            --draft \
            main.js manifest.json styles.css dist/lImporter.zip